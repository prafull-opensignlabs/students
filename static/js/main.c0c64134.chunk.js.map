{"version":3,"sources":["StudentData.js","useGeoLocation.js","components/Home.js","components/About.js","images/NXG_logo.png","components/menu/Navbarmenu.js","components/Footer.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Parse","initialize","serverURL","StudentData","useState","readResults","setReadResults","newStudentEmail","setNewStudentEmail","newStudentAge","setNewStudentAge","Location","loaded","coordinates","lat","lng","setLocation","onSuccess","location","coords","latitude","longitude","onError","error","code","message","useEffect","navigator","geolocation","getCurrentPosition","useGeoLocation","newStudentFirstName","setNewStudentFirstName","newStudentLastName","setNewStudentLastName","newStudentAddress","setNewStudentAddress","newStudentZipcode","setnewStudentZipcode","newStudentCity","setnewStudentCity","newStudentState","setnewStudentState","newStudentDateofJoin","setNewStudentDateofJoin","readStudents","createStudent","newStudentEmailVaule","newStudentAgeValue","Number","newStudentFirsNameValue","newStudentLastNameValue","newStudentAddressvalue","newstudentZipcodeValue","newStudentCityValue","newStudentStateValue","newStudentDateofJoinValue","Date","geopoint","GeoPoint","Student","Object","set","First_Name","Last_name","AddressLine","zipcode","city","state","save","alert","parseQuery","Query","find","students","studentsJsonArr","map","item","id","Name","get","Email","Age","arrayofobject","done","DateofJoin","DateofEnd","updateStudent","studentId","deleteStudent","destroy","columns","dataField","text","formatter","isDummyField","_","row","onClick","className","value","onChange","event","target","placeholder","size","required","type","keyField","data","striped","hover","condensed","pagination","paginationFactory","Home","About","Navbarmenu","isMenu","setisMenu","isResponsiveclose","setResponsiveclose","toggleClass","boxClass","push","to","src","logo","alt","style","display","join","Footer","href","Contact","App","basename","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0c64134.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport \"./App.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport { useGeoLocation } from \"./useGeoLocation\";\n\nconst PARSE_APPLICATION_ID = \"TIYO6wjIN55gA47WdBG7iSROns8jhe798Pad7EdF\";\nconst PARSE_HOST_URL = \"https://parseapi.back4app.com/\";\nconst PARSE_JAVASCRIPT_KEY = \"Si8mPs6maxQE3IDN8QHb6LRLF2mP1dJ7tj8vKa6A\";\n\nParse.initialize(PARSE_APPLICATION_ID, PARSE_JAVASCRIPT_KEY);\nParse.serverURL = PARSE_HOST_URL;\n\nexport const StudentData = () => {\n  const [readResults, setReadResults] = useState([]);\n  const [newStudentEmail, setNewStudentEmail] = useState(\"\");\n  const [newStudentAge, setNewStudentAge] = useState(\"\");\n  //for geopoint\n  const Location = useGeoLocation();\n\n  //Array of Object\n\n  const [newStudentFirstName, setNewStudentFirstName] = useState(\"\");\n  const [newStudentLastName, setNewStudentLastName] = useState(\"\");\n//\n  const [newStudentAddress, setNewStudentAddress] = useState(\"\");\n  const [newStudentZipcode, setnewStudentZipcode] = useState(\"\");\n  const [newStudentCity, setnewStudentCity] = useState(\"\");\n  const [newStudentState, setnewStudentState] = useState(\"\");\n  const [newStudentDateofJoin, setNewStudentDateofJoin]= useState(\"\")\n \n  //For fetching data automatically on page load\n  useEffect(() => {\n    readStudents();\n  }, []);\n\n  // For creating new Entry\n  const createStudent = async function () {\n    const newStudentEmailVaule = newStudentEmail;\n    const newStudentAgeValue = Number(newStudentAge);\n\n    //Array of Object\n    const newStudentFirsNameValue = newStudentFirstName;\n    const newStudentLastNameValue = newStudentLastName;\n//\n    const newStudentAddressvalue = newStudentAddress;\n    const newstudentZipcodeValue = Number(newStudentZipcode);\n    const newStudentCityValue = newStudentCity;\n    const newStudentStateValue = newStudentState;\n    const newStudentDateofJoinValue = new Date(newStudentDateofJoin);\n//current position\n    const geopoint = new Parse.GeoPoint(Location.coordinates?.lat, Location.coordinates?.lng);\n\n\n\n    let Student = new Parse.Object(\"Student\");\n    Student.set(\"Name\", {\n      First_Name: newStudentFirsNameValue,\n      Last_name: newStudentLastNameValue,\n    });\n\n    Student.set(\"Email\", newStudentEmailVaule);\n    Student.set(\"Age\", newStudentAgeValue);\n    Student.set(\"DateofJoin\", newStudentDateofJoinValue)\n    Student.set(\"done\", true);\n    Student.set(\"arrayofobject\", [\n      {\n        AddressLine: newStudentAddressvalue,\n        zipcode: newstudentZipcodeValue,\n        city: newStudentCityValue,\n        state: newStudentStateValue,\n      },\n    ]);\n    Student.set(\"location\", geopoint)\n \n    try {\n      await Student.save();\n\n      alert(\"Success! Student Data created!\");\n\n      readStudents();\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  //for reading data from db\n  const readStudents = async function () {\n    const parseQuery = new Parse.Query(\"Student\");\n    try {\n      let students = await parseQuery.find();\n      const studentsJsonArr = students.map((item) => ({\n        id: item.id,\n        // title: item.get(\"title\"),\n        Name: item.get(\"Name\"),\n\n        Email: item.get(\"Email\"),\n        Age: item.get(\"Age\"),\n        arrayofobject: item.get(\"arrayofobject\"),\n        done: item.get(\"done\"),\n        DateofJoin: item.get(\"DateofJoin\"),\n        DateofEnd: item.get(\"DateofEnd\"),\n        geopoint: item.get(\"location\")\n      }));\n\n      setReadResults(studentsJsonArr);\n      // console.log(studentsJsonArr)\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  //For activate and deactivate Data\n  const updateStudent = async function (studentId, done) {\n    let Student = new Parse.Object(\"Student\");\n    Student.set(\"objectId\", studentId);\n\n    Student.set(\"done\", done);\n    try {\n      await Student.save();\n\n      alert(\"Success! Student updated!\");\n\n      readStudents();\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  //For delte Data from db\n  const deleteStudent = async function (studentId) {\n    let Student = new Parse.Object(\"Student\");\n    Student.set(\"objectId\", studentId);\n\n    try {\n      await Student.destroy();\n      alert(\"Success! Student Data deleted!\");\n\n      readStudents();\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  //for making columns in bootstrap table with buttons\n  const columns = [\n    // {\n    //   dataField: \"id\",\n    //   text: \"student id\",\n    // },\n    {\n      dataField: \"Name\",\n      text: \"Name\",\n      formatter: function (item) {\n        if (item) {\n          return (\n            item.First_Name + \" \" + item.Last_name );}},\n    },\n    {\n      dataField: \"Email\",\n      text: \"Email\",\n    },\n    {\n      dataField: \"Age\",\n      text: \"Age\",\n    },\n    {\n      dataField: \"arrayofobject\",\n      text: \"AddressLine\",\n\n      // for showing array of object on ui in row\n      formatter: function (item) {\n        if (item) {\n          return (\n            item[0].AddressLine +\n            \", \" +\n            item[0].city +\n            \", \" +\n            item[0].state +\n            \", \" +\n            item[0].zipcode +\n            \".\"\n          );\n        }\n      },\n    },\n    {\n      dataField: \"DateofJoin\",\n      text: \"Date of Join\",\n      // filter: dateFilter()\n      formatter: function (item) {\n        if (item) {\n          return (\n            item + \" \" );}}\n    },\n    {\n      dataField: \"geopoint\",\n      text: \"geopoint\",\n      // filter: dateFilter()\n      formatter: function (item) {\n        if (item) {\n          return (\n            item.latitude && item.longitude ? item.latitude + \", \" + item.longitude : \" \");}}\n    },\n    \n    {\n      dataField: \"df2\",\n      isDummyField: true,\n      text: \"Action\",\n      formatter: (_, row) => {\n        if (row.done) {\n          return (\n            <>\n              <button\n                id=\"button\"\n                onClick={() => deleteStudent(row.id)}\n                className=\"remove_btn\"\n              >\n                Delete\n              </button>\n              <button\n                id=\"button\"\n                onClick={() => updateStudent(row.id, false)}\n                className=\"update_btn1\"\n              >\n                Deactivate\n              </button>\n            </>\n          );\n        }\n        return (\n          <>\n            <button\n              id=\"button\"\n              onClick={() => deleteStudent(row.id)}\n              className=\"remove_btn\"\n            >\n              Delete\n            </button>\n            <button\n              id=\"button\"\n              onClick={() => updateStudent(row.id, true)}\n              className=\"update_btn2\"\n            >\n              Activate\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  // const submit = (event) => {\n  //   event.preventDefault();\n  // }\n  return (\n    <>\n     {/* <div>\n            {\n              location.loaded ? JSON.stringify(location): \"location data is not available\"\n            }\n          </div> */}\n      <div>\n        <div className=\"container\">\n          <h2 className=\"list_heading\">Student Data</h2>\n          <div className=\"flex_between\"></div>\n          <div className=\"card\">\n            <div className=\"card-body no-padding height-9\">\n\n              {/* Inputs */}\n              <form className=\"form-inline\" >\n                <input\n                  value={newStudentFirstName}\n                  onChange={(event) =>\n                    setNewStudentFirstName(event.target.value)\n                  }\n                  placeholder=\"First Name\"\n                  size=\"large\"\n                  required \n                />\n                <input\n                  value={newStudentLastName}\n                  onChange={(event) =>\n                    setNewStudentLastName(event.target.value)\n                  }\n                  placeholder=\"Last Name\"\n                  size=\"large\"\n                  required\n                />\n\n                <input\n                  value={newStudentEmail}\n                  onChange={(event) => setNewStudentEmail(event.target.value)}\n                  placeholder=\"Student Email\"\n                  size=\"large\"\n                  required\n                />\n\n                <input\n                  value={newStudentAge}\n                  onChange={(event) => setNewStudentAge(event.target.value)}\n                  placeholder=\"Student Age\"\n                  size=\"large\"\n                  required\n                />\n\n                <input\n                  value={newStudentAddress}\n                  onChange={(event) => setNewStudentAddress(event.target.value)}\n                  placeholder=\"Student Address\"\n                  size=\"large\"\n                  required\n                />\n                <input\n                  value={newStudentZipcode}\n                  onChange={(event) => setnewStudentZipcode(event.target.value)}\n                  placeholder=\"Student Zipcode\"\n                  size=\"large\"\n                  required\n                />\n                <input\n                  value={newStudentCity}\n                  onChange={(event) => setnewStudentCity(event.target.value)}\n                  placeholder=\"Student City\"\n                  size=\"large\"\n                  required\n                />\n                <input\n                  value={newStudentState}\n                  onChange={(event) => setnewStudentState(event.target.value)}\n                  placeholder=\"Student State\"\n                  size=\"large\"\n                  required\n                />\n                 <input\n                  value={newStudentDateofJoin}\n                  onChange={(event) => setNewStudentDateofJoin(event.target.value)}\n                  placeholder=\"Date of Join (mm/dd/yyyy)\"\n                  size=\"large\"\n                  required\n                />\n              </form>\n              <button type=\"submit\" onClick={createStudent} className=\"add_btn\">\n                Add\n              </button>\n            </div>\n          </div>\n          {/* Bootstrap table */}\n          <div className=\"card\">\n            <BootstrapTable\n              keyField=\"id\"\n              data={readResults}\n              columns={columns}\n              striped\n              hover\n              condensed\n              pagination={paginationFactory()}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\n\n","import { useState , useEffect } from \"react\";\n\n\nexport const useGeoLocation = () =>{\n    const [Location, setLocation]= useState({\n        loaded: false,\n        coordinates: {lat:\"\", lng:\"\"},\n    });\n    const onSuccess = location => {\n        setLocation({\n            loaded: true,\n            coordinates: {\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            },\n        });\n    };\n\n    const onError= error => {\n        setLocation({\n            loaded:true,\n            error:{ \n                code:error.code,\n                message: error.message,\n            }\n        })\n    };\n\n    useEffect(() => {\n        if(!(\"geolocation\" in navigator)){\n            onError({\n                code: 0,\n                message: \"Geolocation not supported\",\n            });\n        }\n       \n     \n     navigator.geolocation.getCurrentPosition(onSuccess, onError)\n\n     }, [])\n\n    return Location;\n};\n\n","import React from 'react'\nimport { StudentData } from \"../StudentData\";\n\n const Home = () => {\n    return (\n        <div>\n             <StudentData />\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react'\n\nexport const About = () => {\n    return (\n        <div className='about'>\n            \n           <h2>About</h2>\n           <h4>Students App</h4>\n            <p>Basically , In this app we can Add student</p>\n            <ul>\n            <li> You can add New student Data</li>\n            <li> You can't add data of student whose age is below 18 due to validation</li>\n            <li> You can Delete student Data but only whose age is greater than 30 due to validation</li>\n            <li> You can Activate / Deactivate student Data</li>\n            </ul>\n            \n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/NXG_logo.e6e9488e.png\";","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FiAlignRight, FiXCircle } from \"react-icons/fi\";\nimport logo from \"../../images/NXG_logo.png\";\nimport \"../../App.css\";\n\nconst Navbarmenu = () => {\n  const [isMenu, setisMenu] = useState(false);\n  const [isResponsiveclose, setResponsiveclose] = useState(false);\n  const toggleClass = () => {\n    setisMenu(isMenu === false ? true : false);\n    setResponsiveclose(isResponsiveclose === false ? true : false);\n  };\n  let boxClass = [\"main-menu menu-right menuq1\"];\n  if (isMenu) {\n    boxClass.push(\"menuq2\");\n  } else {\n    boxClass.push(\"\");\n  }\n\n  return (\n    <header className=\"header__middle\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* Add Logo  */}\n          <div className=\"header__middle__logo\">\n            <NavLink className=\"is-active\" to=\"/\">\n              <img src={logo} alt=\"logo\" />\n            </NavLink>\n          </div>\n          <div className=\"header__middle__menus\">\n            <nav className=\"main-nav \">\n              {/* Responsive Menu Button */}\n              {isResponsiveclose === true ? \n                <>\n                  <span className=\"menubar__button\" style={{ display: \"none\" }} onClick={toggleClass} ><FiXCircle /> </span>\n                </> : <>\n                  <span  className=\"menubar__button\"  style={{ display: \"none\" }}  onClick={toggleClass} ><FiAlignRight />  </span>\n                </> }\n\n\n              <ul className={boxClass.join(\" \")}>\n                <li className=\"menu-item\">\n                   <NavLink  className=\"is-active\" onClick={toggleClass} to={`/`}>Home</NavLink>\n                   {/* exact=\"true\" */}\n                </li>\n                <li className=\"menu-item \">\n                  <NavLink  onClick={toggleClass}  className=\"is-active\" to={`/About`} >About</NavLink>\n                </li>\n                <li className=\"menu-item \">  \n                  <NavLink onClick={toggleClass} className=\"is-active\" to={`/Contact`}>Contact</NavLink>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\nexport default Navbarmenu;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <h4>contact us</h4>\n      <p>Phone Number:</p>\n\n      <a href=\"#/\"> +91-7030315767</a>\n      <p> Email :</p>\n      <a href=\"#/\">contact@nxglabs.in</a>\n      <p>\n        Address: 2nd Floor, Madhuvant Villa, Rajyog society, Baner, Pune –\n        411045\n      </p>\n      <h5 className=\"text-center\">Copyright &copy; NXG Labs Pvt. Ltd.</h5>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      <h2>Contact Us</h2> <br />\n      <p>\n        Phone Number:\n        <a href=\"#/\"> +91-7030315767</a>\n      </p>\n      <h4> Email :</h4>\n      <a href=\"#/\">contact@nxglabs.in</a>\n      <h4>Address:</h4>\n      <p>2nd Floor, Madhuvant Villa, Rajyog society, Baner, Pune – 411045</p>\n      <a href=\"https://nxglabs.in/contact-us-3.html\" aria-current=\"page\">\n        More Details\n      </a>\n    </div>\n  );\n};\nexport default Contact;\n","import \"./App.css\";\nimport React from \"react\";\nimport Parse from \"parse\";\n\n//new changes\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport { About } from \"./components/About\";\nimport Navbarmenu from \"./components/menu/Navbarmenu\";\nimport Footer from \"./components/Footer\";\nimport Contact from \"./components/Contact\";\nimport Error from \"./components/Error\";\n\nconst PARSE_APPLICATIION_ID = \"TIYO6wjIN55gA47WdBG7iSROns8jhe798Pad7EdF\";\nconst PARSE_HOST_URL = \"https://parseapi.back4app.com/\";\nconst PARSE_JAVASCRIPT_KEY = \"Si8mPs6maxQE3IDN8QHb6LRLF2mP1dJ7tj8vKa6A\";\n\nParse.initialize(PARSE_APPLICATIION_ID, PARSE_JAVASCRIPT_KEY);\nParse.serverURL = PARSE_HOST_URL;\n\nfunction App() {\n  return (\n    <>\n      <Router basename=\"/\">\n        {/* Add menu component */}\n        <Navbarmenu />\n        \n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route path=\"/About\" element={<About />} />\n          <Route path=\"/Contact\" element={<Contact />} />\n          {/* <Route element={<Error />} /> */}\n        </Routes>\n        {/* <Error /> */}\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}